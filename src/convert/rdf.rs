/*!
One-line description.

More detailed description, with

# Example

YYYYY

*/

use crate::api::ParseTree;
use crate::error::Error;
use std::io::Write;

// ------------------------------------------------------------------------------------------------
// Public Macros
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Public Types
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Public Functions
// ------------------------------------------------------------------------------------------------

pub fn write_as_rdf<W: Write>(_tree: &ParseTree<'_>, _w: &mut W) -> Result<(), Error> {
    todo!()
}

write_to_string!(to_rdf_string, write_as_rdf);

write_to_file!(to_rdf_file, write_as_rdf);

print_to_stdout!(print_rdf, write_as_rdf);

// ------------------------------------------------------------------------------------------------
// Private Macros
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Private Types
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Implementations
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Private Functions
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Modules
// ------------------------------------------------------------------------------------------------
